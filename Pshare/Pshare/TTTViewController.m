//
//  TTTViewController.m
//  Pshare
//
//  Created by Tiago Magalhães on 29/05/16.
//  Copyright © 2016 Tiago Magalhães. All rights reserved.
//

#import "TTTViewController.h"
#import "AppDelegate.h"

@interface TTTViewController ()
    @property (nonatomic, strong) AppDelegate *appDelegate;
    @property (nonatomic, strong) NSString *peerDisplayName;
    -(void)didReceiveDataWithNotification:(NSNotification *)notification;


@end

@implementation TTTViewController


// @synthesize means "create getter and setter" methods.
@synthesize s1,s2,s3,s4,s5,s6,s7,s8,s9;
@synthesize oImg, xImg, theImg, whoseTurn, board;
@synthesize resetBtn, myAlertView;

- (void)viewDidLoad {
    
    [super viewDidLoad]; // Autogenerated.
    
    
    oImg = [UIImage imageNamed:@"circle.png"];
    xImg = [UIImage imageNamed:@"cross.png"];
    
    playerToken=1;
    
    WhoseTurn.text = @"I can go";
    
    numberOfPlays=0;
    
    
    _appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(didReceiveDataWithNotification:)
                                                 name:@"MCDidReceiveDataNotification"
                                               object:nil];
}


- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
    if (numberOfPlays%2==0) {
        theImg = xImg;
    } else {
        theImg = oImg;
    }
    
    
    
    // ................
    NSArray *allPeers = _appDelegate.mpManager.session.connectedPeers;
    NSError *error;
    NSData *dataToSend;
    
    
    
    UITouch *touch = [[event allTouches] anyObject];
    cellWasUsed = NO;
    
    if (CGRectContainsPoint([s1 frame], [touch locationInView:self.view])&(s1.image == NULL)){
        cellWasUsed=YES;
        s1.image=theImg;
        dataToSend = [@"1" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s2 frame], [touch locationInView:self.view])&(s2.image == NULL)){
        cellWasUsed=YES;
        s2.image=theImg;
        dataToSend = [@"2" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s3 frame], [touch locationInView:self.view])&(s3.image == NULL)){
        cellWasUsed=YES;
        s3.image=theImg;
        dataToSend = [@"3" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s4 frame], [touch locationInView:self.view])&(s4.image == NULL)){
        cellWasUsed=YES;
        s4.image=theImg;
        dataToSend = [@"4" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s5 frame], [touch locationInView:self.view])&(s5.image == NULL)){
        cellWasUsed=YES;
        s5.image=theImg;
        dataToSend = [@"5" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s6 frame], [touch locationInView:self.view])&(s6.image == NULL)){
        cellWasUsed=YES;
        s6.image=theImg;
        dataToSend = [@"6" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s7 frame], [touch locationInView:self.view])&(s7.image == NULL)){
        cellWasUsed=YES;
        s7.image=theImg;
        dataToSend = [@"7" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s8 frame], [touch locationInView:self.view])&(s8.image == NULL)){
        cellWasUsed=YES;
        s8.image=theImg;
        dataToSend = [@"8" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    if (CGRectContainsPoint([s9 frame], [touch locationInView:self.view])&(s9.image == NULL)){
        cellWasUsed=YES;
        s9.image=theImg;
        dataToSend = [@"9" dataUsingEncoding:NSUTF8StringEncoding];
    }
    
    [_appDelegate.mpManager.session sendData:dataToSend
                                     toPeers:allPeers
                                    withMode:MCSessionSendDataReliable
                                       error:&error];
    if (error) {
        NSLog(@"%@", [error localizedDescription]);
    }
    
    
    
    [self processingLogic];
    
    if (cellWasUsed)
    {
        [self updatePlayerInfo];
    }
    whoseTurn.text = [NSString stringWithFormat:@"%@ Can go!\n", _peerDisplayName];
    
}


-(void) processingLogic{
    if ([self checkForWin])
    {
        if (numberOfPlays%2==0)
        {
        myAlertView = [[UIAlertView alloc] initWithTitle:@"Winner!" message:@ "X won!" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
            [myAlertView show];
            [self ResetBoard];
        }
        else
        {
            myAlertView = [[UIAlertView alloc] initWithTitle:@"Winner!" message:@ "O won!" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
            [myAlertView show];
            [self ResetBoard];
        }
    }
}



-(void)didReceiveDataWithNotification:(NSNotification *)notification{
    MCPeerID *peerID = [[notification userInfo] objectForKey:@"peerID"];
    _peerDisplayName = peerID.displayName;

    
    
    NSData *receivedData = [[notification userInfo] objectForKey:@"data"];
    NSString *receivedText = [[NSString alloc] initWithData:receivedData encoding:NSUTF8StringEncoding];
    
    if ([_peerDisplayName isEqualToString:@"iPod04 jfernan"])
        playerToken = 1;
    else
        playerToken = 2;
    
    if (numberOfPlays%2==0) {
        theImg = xImg;
    } else{
        theImg = oImg;
    }
    
    cellWasUsed=YES;
    if ([receivedText isEqualToString:@"1"])
    {
        s1.image=theImg;
    }
    else if ([receivedText isEqualToString:@"2"])
    {
        s2.image=theImg;
    }
    else if ([receivedText isEqualToString:@"3"])
    {
        s3.image=theImg;
    }
    else if ([receivedText isEqualToString:@"4"])
    {
        s4.image=theImg;
    }
    else if ([receivedText isEqualToString:@"5"])
    {
        s5.image=theImg;
    }
    else if ([receivedText isEqualToString:@"6"])
    {
        s6.image=theImg;
    }
    else if ([receivedText isEqualToString:@"7"])
    {
        s7.image=theImg;
    }
    else if ([receivedText isEqualToString:@"8"])
    {
        s8.image=theImg;
    }
    else if ([receivedText isEqualToString:@"9"])
    {
        s9.image=theImg;
    }
    
    [self processingLogic];
    
    if (cellWasUsed)
    {
        [self updatePlayerInfo];
    }
    
    
    whoseTurn.text = @"I can go!";
}




-(BOOL) checkForWin{
    
    
    if(s1.image != NULL) {
        if (((s1.image == s2.image) && (s1.image == s3.image)) ||
            ((s1.image == s4.image) && (s1.image == s7.image))) {
            return YES;
        }
    }
    
    
    //Check for wins that goe through the middle of the board.
    
    if(s5.image != NULL) {
        if (((s5.image == s4.image) && (s5.image == s6.image)) ||
            ((s5.image == s2.image) && (s5.image == s8.image)) ||
            ((s5.image == s1.image) && (s5.image == s9.image)) ||
            ((s5.image == s3.image) && (s5.image == s7.image))) {
            return YES;
        }
    }
    
    
    // Check for win in the rightmost column and in the lowest row.
    
    if(s9.image != NULL) {
        if (((s9.image == s6.image) && (s9.image == s3.image)) ||
            ((s9.image == s8.image) && (s9.image == s7.image))) {
            return YES;
        }
    }
    
    return NO;

    
}


-(IBAction)buttonReset{
    [self ResetBoard];
}

-(void) ResetBoard
{
    s1.image=NULL;
    s2.image=NULL;
    s3.image=NULL;
    s4.image=NULL;
    s5.image=NULL;
    s6.image=NULL;
    s7.image=NULL;
    s8.image=NULL;
    s9.image=NULL;
    
    playerToken=1;
    whoseTurn.text =@"I can go";
    numberOfPlays=0;
    
    
}

-(void) updatePlayerInfo{
    numberOfPlays++;
    count++;
    if (numberOfPlays==9)
    {
        myAlertView = [[UIAlertView alloc] initWithTitle:@"No Winner!" message:@ "Draw!" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        [myAlertView show];

        [self ResetBoard];
        
    }
    
//    if(playerToken==1)
//    {
//        if (!numberOfPlays%2==0) {
//                whoseTurn.text = [NSString stringWithFormat:@"%@ Can go!\n", _peerDisplayName];
//            }else{
//                whoseTurn.text = @"I can go!";
//            }
//        }
//    else if(playerToken==2)
//    {
//        if (numberOfPlays%2==0) {
//                whoseTurn.text = [NSString stringWithFormat:@"%@ Can go!\n", _peerDisplayName];
//            }else{
//                whoseTurn.text = @"I can go!";
//            }
//        }
    
}


/*

-(void)slot:(UIImageView *)slot wasTouched:(UITouch *)touch {
    if ((slot.image == NULL) &&
        CGRectContainsPoint([slot frame], [touch locationInView:self.view])) {
        slot.image = imageToPlace;
        round++;
        [self gameStatus];
    }
}

-(void)gameStatus{
    BOOL win = [self somebodyWon];
    if (round == 9 || win) {
        myAlertView = nil;
        NSString *result = nil;
        if (round == 9 && !win) {
            result = @"Draw!";
        }
        else if (round <= 9 && win){
            if(player == 1){
                result = @"Player 1 won!";
            }
            else if(player == 2){
                result = @"Player 2 won!";
            }
        }
        else {
            result = @"Sorry! Something went wrong when determining win/draw situation.";
        }
        myAlertView = [[UIAlertView alloc] initWithTitle:@"Result:" message:result delegate:self cancelButtonTitle:@"Ok!" otherButtonTitles:nil, nil];
        [myAlertView show];
        [self resetBoard];
    } else {
        [self switchPlayers];
    }
}
 
 */

/*
-(BOOL)somebodyWon{
 
     //Check for win in the leftmost column and in the topmost row.
 
    if(s1.image != NULL) {
        if (((s1.image == s2.image) && (s1.image == s3.image)) ||
            ((s1.image == s4.image) && (s1.image == s7.image))) {
            return YES;
        }
    }
    
 
     //Check for wins that goe through the middle of the board.
 
    if(s5.image != NULL) {
        if (((s5.image == s4.image) && (s5.image == s6.image)) ||
            ((s5.image == s2.image) && (s5.image == s8.image)) ||
            ((s5.image == s1.image) && (s5.image == s9.image)) ||
            ((s5.image == s3.image) && (s5.image == s7.image))) {
            return YES;
        }
    }
    
 
     // Check for win in the rightmost column and in the lowest row.
 
    if(s9.image != NULL) {
        if (((s9.image == s6.image) && (s9.image == s3.image)) ||
            ((s9.image == s8.image) && (s9.image == s7.image))) {
            return YES;
        }
    }
    
    return NO;
}

- (IBAction)resetButton:(id)sender {
    [self resetBoard];
}

//-(IBAction)buttonReset{
//    [self resetBoard];
//}

-(void)resetBoard{
    s1.image = NULL;
    s2.image = NULL;
    s3.image = NULL;
    s4.image = NULL;
    s5.image = NULL;
    s6.image = NULL;
    s7.image = NULL;
    s8.image = NULL;
    s9.image = NULL;
    
    player = 1;
    msg.text = @"Player 1: Put a \"Cross\" on the field";
    round = 0;
}

-(void)switchPlayers{
    if (player == 1){
        player = 2;
        msg.text = @"Player 2: Put a \"Circle\" on the field";
    } else {
        player = 1;
        msg.text = @"Player 1: Put a \"Cross\" on the field";
    }
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation != UIInterfaceOrientationPortraitUpsideDown);
}
 
 */

@end